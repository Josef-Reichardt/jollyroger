apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rocket-chat-mongodb
  name: rocket-chat-mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: rocket-chat-mongodb
  template:
    metadata:
      labels:
        app: rocket-chat-mongodb
    spec:
      containers:
        - name: rocket-chat-mongodb
          image: "docker.io/bitnami/mongodb:6.0"
          env:
            - name: MONGODB_REPLICA_SET_MODE
              value: primary
            - name: MONGODB_REPLICA_SET_NAME
              value: rs0
            - name: MONGODB_PORT_NUMBER
              value: "27017"
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: rocket-chat-mongodb
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: rocket-chat-mongodb
            - name: MONGODB_ENABLE_JOURNAL
              value: "true"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
          ports:
            - containerPort: 27017
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /bitnami/mongodb
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - "mongosh --eval 'rs.initiate({_id: \"rs0\", members: [{_id: 0, host: \"rocket-chat-mongodb:27017\"}]})'"
      restartPolicy: Always
      volumes:
        - name: data
          hostPath:
            path: "/data/rocket-chat-mongodb"
